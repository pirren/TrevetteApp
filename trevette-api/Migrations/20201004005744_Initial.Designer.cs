// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using trevette_api.Persistence.Contexts;

namespace trevette_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201004005744_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("trevette_api.Domain.Models.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BadgeId");

                    b.ToTable("Badge");

                    b.HasData(
                        new
                        {
                            BadgeId = 1,
                            Title = "V8 Motor"
                        },
                        new
                        {
                            BadgeId = 2,
                            Title = "Läderinredning"
                        },
                        new
                        {
                            BadgeId = 3,
                            Title = "Specialobjekt"
                        });
                });

            modelBuilder.Entity("trevette_api.Domain.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.ToTable("Car");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            Description = "Den nya porschen är riktigt fet. Har en 3 L motor och gör 100 km/h på 3.7 s med sport-chrono paket. Denna vagn är för dom riktigt rika.",
                            InStock = true,
                            Mileage = 15000,
                            Model = "Porsche 911 Carrera",
                            Title = "Tidlös maskin",
                            Year = 1980
                        });
                });

            modelBuilder.Entity("trevette_api.Domain.Models.CarBadge", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("BadgeId")
                        .HasColumnType("int");

                    b.HasKey("CarId", "BadgeId");

                    b.HasIndex("BadgeId");

                    b.ToTable("CarBadge");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            BadgeId = 1
                        },
                        new
                        {
                            CarId = 1,
                            BadgeId = 2
                        },
                        new
                        {
                            CarId = 1,
                            BadgeId = 3
                        });
                });

            modelBuilder.Entity("trevette_api.Domain.Models.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId");

                    b.HasIndex("CarId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("trevette_api.Domain.Models.CarBadge", b =>
                {
                    b.HasOne("trevette_api.Domain.Models.Badge", "Badge")
                        .WithMany("CarBadges")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trevette_api.Domain.Models.Car", "Car")
                        .WithMany("CarBadges")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("trevette_api.Domain.Models.Photo", b =>
                {
                    b.HasOne("trevette_api.Domain.Models.Car", "Car")
                        .WithMany("Photos")
                        .HasForeignKey("CarId");
                });
#pragma warning restore 612, 618
        }
    }
}
